// Generated by CoffeeScript 1.3.3

/*
# 
# Copyright (C) 2013 Richard Mortier <mort@cantab.net>.
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place - Suite 330, Boston, MA 02111-1307, USA.
#
*/


(function() {
  var courses, div, link, self, span, wrap, _data, _promises;

  self = typeof exports !== "undefined" && exports !== null ? exports : this;

  _promises = [];

  _data = null;

  wrap = function(tag, x, cl, id) {
    cl = cl != null ? "class='" + cl + "'" : "";
    id = id != null ? "id='" + id + "'" : "";
    return "<" + tag + " " + id + " " + cl + ">" + x + "</" + tag + ">";
  };

  div = function(cl, x, id) {
    return wrap("div", x, cl, id);
  };

  span = function(cl, x, id) {
    return wrap("span", x, cl);
  };

  link = function(cl, x, u) {
    return wrap("span", "<a href='" + u + "'>" + x + "</a>", cl);
  };

  courses = {
    fetch: function(url) {
      _promises.push($.Deferred(function(promise) {
        return $.getJSON(url, function(data) {
          _data = data;
          return promise.resolve();
        });
      }));
      return this;
    },
    render: function(tgt) {
      var _this = this;
      $.when.apply(null, _promises).then(function() {
        var course, _i, _len, _results;
        $(tgt).html('');
        _results = [];
        for (_i = 0, _len = _data.length; _i < _len; _i++) {
          course = _data[_i];
          _results.push($(tgt).after(div("course", link("title", course.title, course.url), course.code)));
        }
        return _results;
      });
      return this;
    }
  };

  self.courses = courses;

}).call(this);
