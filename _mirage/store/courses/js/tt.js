// Generated by CoffeeScript 1.7.1

/*
 *
 * Copyright (C) 2013 Richard Mortier <mort@cantab.net>.
 * All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published by
 * the Free Software Foundation
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, write to the Free Software Foundation, Inc., 59 Temple
 * Place - Suite 330, Boston, MA 02111-1307, USA.
 *
 */

(function() {
  var button, days, div, em, footer, format_weeks, hd, li, link, p, self, small, span, tab, table, tbody, td, th, thead, tr, tt, ul, wrap, _data, _promises;

  self = typeof exports !== "undefined" && exports !== null ? exports : this;

  _promises = [];

  _data = null;

  wrap = function(tag, s, _arg) {
    var cl, colspan, id, literal;
    cl = _arg.cl, id = _arg.id, colspan = _arg.colspan, literal = _arg.literal;
    cl = cl != null ? "class='" + cl + "'" : "";
    id = id != null ? "id='" + id + "'" : "";
    colspan = colspan != null ? "colspan='" + colspan + "'" : "";
    literal = literal != null ? literal : "";
    return "<" + tag + " " + id + " " + cl + " " + colspan + " " + literal + ">" + s + "</" + tag + ">";
  };

  div = function(o, s) {
    return wrap("div", s, o);
  };

  span = function(o, s) {
    return wrap("span", s, o);
  };

  ul = function(o, lis) {
    return wrap("ul", lis, o);
  };

  li = function(o, s) {
    return wrap("li", s, o);
  };

  p = function(o, s) {
    return wrap("p", s, o);
  };

  small = function(o, s) {
    return wrap("small", s, o);
  };

  footer = function(o, s) {
    return wrap("footer", s, o);
  };

  button = function(o, s) {
    return wrap("button", s, o);
  };

  em = function(o, s) {
    return wrap("em", s, o);
  };

  table = function(o, s) {
    return wrap("table", s, o);
  };

  tbody = function(o, s) {
    return wrap("tbody", s, o);
  };

  thead = function(o, s) {
    return wrap("thead", s, o);
  };

  th = function(o, s) {
    return wrap("th", s, o);
  };

  tr = function(o, s) {
    return wrap("tr", s, o);
  };

  td = function(o, s) {
    return wrap("td", s, o);
  };

  hd = function(n, o, s) {
    return wrap("h" + n, s, o);
  };

  link = function(s, u) {
    return "<a href=\"" + u + "\">" + s + "</a>";
  };

  tab = function(s, u) {
    return "<a href=\"" + u + "\" data-toggle=\"tab\">" + s + "</a>";
  };

  days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];

  format_weeks = function(weeks) {
    var i, range, ranges, retval, _i, _len;
    ranges = weeks.split(/,/).map(function(x) {
      return x.split(/[-] w[/]c |[-]/).map(function(x) {
        return x.trim();
      });
    });
    retval = '';
    for (i = _i = 0, _len = ranges.length; _i < _len; i = ++_i) {
      range = ranges[i];
      switch (range.length) {
        case 2:
          retval += "" + range[0] + " (" + range[1] + "),\n";
          break;
        case 4:
          retval += "" + range[0] + "--" + range[2] + " (" + range[1] + "--" + range[3] + "),\n";
      }
    }
    return retval.replace(/,\n$/, '');
  };

  tt = {
    fetch: function(url) {
      _promises.push($.Deferred(function(promise) {
        return $.getJSON(url, function(data) {
          _data = data;
          return promise.resolve();
        });
      }));
      return this;
    },
    render: function(tgt) {
      var cmp;
      cmp = function(x, y) {
        return x.code.localeCompare(y['code']);
      };
      $.when.apply(null, _promises).then((function(_this) {
        return function() {
          var activities, code, module, title, _i, _len, _ref;
          $(tgt).html('');
          _ref = _data.modules.filter(function(m) {
            return 'code' in m;
          }).filter(function(m) {
            return m.code.match('^G[56]');
          }).filter(function(m) {
            return m.activities.length > 0;
          }).sort(cmp);
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            module = _ref[_i];
            code = module.code.toUpperCase();
            title = hd(4, {}, (button({
              cl: "btn btn-small badge-info",
              literal: "style=\"margin-right:1.5em;\" type=\"button\",\ndata-toggle=\"collapse\", data-target=\"#" + code + "\""
            }, "+")) + ("" + (link(code, module.url)) + ", " + module.title));
            activities = div({
              cl: "collapse",
              id: "" + code
            }, table({
              cl: "table table-striped table-condensed span10 offset1"
            }, tbody({}, $(module.activities).sort(function(x, y) {
              var d;
              d = days.indexOf(x['day']) - days.indexOf(y['day']);
              switch (false) {
                case !(d < 0):
                  return -1;
                case !(d > 0):
                  return 1;
                default:
                  switch (false) {
                    case !(x['start'] < y['start']):
                      return -1;
                    case !(x['start'] > y['start']):
                      return 1;
                    default:
                      return 0;
                  }
              }
            }).map(function(i, a) {
              return tr({}, td({}, ("" + a['code'] + " " + a['day'].slice(0, 3)) + (" " + a['start'] + "--" + a['end']) + (" " + a['room'] + " " + (format_weeks(a['weeks'])))));
            }).toArray().join(""))));
            $(tgt).append(div({
              cl: "row-fluid"
            }, title + activities));
          }
          return $(tgt).append(div({
            cl: "well well-small text-right"
          }, footer({}, small({
            cl: "muted"
          }, em({}, "Generated by " + _data.tool + " on " + _data.date + ".")))));
        };
      })(this));
      return this;
    }
  };

  self.tt = tt;

}).call(this);
