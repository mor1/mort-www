###
# 
# Copyright (C) 2013 Richard Mortier <mort@cantab.net>.
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place - Suite 330, Boston, MA 02111-1307, USA.
# 
###

self = exports ? this

_promises = []
_data = null

## rendering helpers
wrap = (tag, s, {cl, id, colspan, literal}) ->
  cl = if cl? then "class='#{cl}'" else ""
  id = if id? then "id='#{id}'" else ""
  colspan = if colspan? then "colspan='#{colspan}'" else ""
  literal = if literal? then literal else ""
  "<#{tag} #{id} #{cl} #{colspan} #{literal}>#{s}</#{tag}>"

div = (o, s) -> wrap "div", s, o
span = (o, s) -> wrap "span", s, o
ul = (o, lis) -> wrap "ul", lis, o
li = (o, s) -> wrap "li", s, o
p = (o, s) -> wrap "p", s, o
small = (o, s) -> wrap "small", s, o
footer = (o, s) -> wrap "footer", s, o
button = (o, s) -> wrap "button", s, o
em = (o, s) -> wrap "em", s, o

table = (o, s) -> wrap "table", s, o
tbody = (o, s) -> wrap "tbody", s, o
thead = (o, s) -> wrap "thead", s, o
th = (o, s) -> wrap "th", s, o
tr = (o, s) -> wrap "tr", s, o
td = (o, s) -> wrap "td", s, o

hd = (n, o, s) -> wrap "h#{n}", s, o

link = (s, u) -> """<a href="#{u}">#{s}</a>"""
tab = (s, u) -> """<a href="#{u}" data-toggle="tab">#{s}</a>"""

days = [
  'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'
  ]

format_weeks = (weeks) ->
  ## attempt to format the "weeks" column reasonably.
  ranges = weeks
    .split(/,/)
    .map((x) -> x.split(/[-] w[/]c |[-]/).map((x) -> x.trim()))

  retval = ''
  for range, i in ranges
    switch range.length
      when 2 then retval += "#{range[0]} (#{range[1]}),\n"
      when 4
        retval += "#{range[0]}--#{range[2]} (#{range[1]}--#{range[3]}),\n"
  retval.replace(/,\n$/,'')
        
tt = 
  fetch: (url) ->
    _promises.push $.Deferred (promise) ->
      $.getJSON url, (data) ->
        _data = data
        promise.resolve()
    @
 
  render: (tgt) ->
    cmp = (x, y) -> x.code.localeCompare(y['code'])
    
    $.when.apply(null, _promises).then =>
      $(tgt).html('')

      for module in _data.modules
        .filter((m) -> 'code' of m)
        .filter((m) -> m.code.match('^G[56]'))
        .filter((m) -> m.activities.length > 0)
        .sort(cmp) 
        
          code = module.code.toUpperCase()
          title = hd 4, {},
            (button {
              cl:"btn btn-small badge-info",
              literal: """
                style="margin-right:1.5em;" type="button",
                data-toggle="collapse", data-target="##{code}"
                """
              },
             "+"
            ) +
            "#{link code, module.url}, #{module.title}"

          activities = div {cl:"collapse", id:"#{code}"}, 
            (table {cl:"table table-striped table-condensed span10 offset1"},
              (tbody {},
                ($(module.activities).sort((x, y) ->
                  ## order activities by day of week
                  d = days.indexOf(x['day']) - days.indexOf(y['day'])
                  switch
                    when d < 0 then -1
                    when d > 0 then 1
                    else
                      switch
                        when x['start'] < y['start'] then -1
                        when x['start'] > y['start'] then 1
                        else 0
                  ).map((i, a) =>
                    (tr {},
                      (td {},
                        ("#{a['code']} #{a['day'][0..2]}" +
                        " #{a['start']}--#{a['end']}" +
                        " #{a['room']} #{format_weeks(a['weeks'])}")))
                  ).toArray().join(""))))

          $(tgt).append (div {cl:"row-fluid"}, (title + activities))
     
      $(tgt).append (div {cl:"well well-small text-right"},
        (footer {},
          (small {cl:"muted"},
            (em {}, "Generated by #{_data.tool} on #{_data.date}."
            ))))
      
    @

self.tt = tt
