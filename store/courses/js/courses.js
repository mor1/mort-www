// Generated by CoffeeScript 1.6.3
/*
#
# Copyright (C) 2013 Richard Mortier <mort@cantab.net>.
# All Rights Reserved.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 as published by
# the Free Software Foundation
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
# more details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place - Suite 330, Boston, MA 02111-1307, USA.
#
*/


(function() {
  var abbrev, button, courses, div, em, footer, hd, is_4yearug, li, link, module, p, part, self, small, span, tab, tabbed, table, tbody, td, th, thead, theme_summary, themes, tr, ul, wrap, _data, _promises,
    __slice = [].slice;

  self = typeof exports !== "undefined" && exports !== null ? exports : this;

  String.prototype.upcase = function() {
    return this.toUpperCase();
  };

  _promises = [];

  _data = null;

  wrap = function(tag, s, _arg) {
    var cl, colspan, id, literal;
    cl = _arg.cl, id = _arg.id, colspan = _arg.colspan, literal = _arg.literal;
    cl = cl != null ? "class='" + cl + "'" : "";
    id = id != null ? "id='" + id + "'" : "";
    colspan = colspan != null ? "colspan='" + colspan + "'" : "";
    literal = literal != null ? literal : "";
    return "<" + tag + " " + id + " " + cl + " " + colspan + " " + literal + ">" + s + "</" + tag + ">";
  };

  div = function(o, s) {
    return wrap("div", s, o);
  };

  span = function(o, s) {
    return wrap("span", s, o);
  };

  ul = function(o, lis) {
    return wrap("ul", lis, o);
  };

  li = function(o, s) {
    return wrap("li", s, o);
  };

  p = function(o, s) {
    return wrap("p", s, o);
  };

  small = function(o, s) {
    return wrap("small", s, o);
  };

  footer = function(o, s) {
    return wrap("footer", s, o);
  };

  button = function(o, s) {
    return wrap("button", s, o);
  };

  em = function(o, s) {
    return wrap("em", s, o);
  };

  table = function(o, s) {
    return wrap("table", s, o);
  };

  tbody = function(o, s) {
    return wrap("tbody", s, o);
  };

  thead = function(o, s) {
    return wrap("thead", s, o);
  };

  th = function(o, s) {
    return wrap("th", s, o);
  };

  tr = function(o, s) {
    return wrap("tr", s, o);
  };

  td = function(o, s) {
    return wrap("td", s, o);
  };

  hd = function(n, o, s) {
    return wrap("h" + n, s, o);
  };

  link = function(s, u) {
    return "<a href=\"" + u + "\">" + s + "</a>";
  };

  tab = function(s, u) {
    return "<a href=\"" + u + "\" data-toggle=\"tab\">" + s + "</a>";
  };

  themes = {
    SE: "red",
    FCS: "blue",
    OSA: "teal",
    PR: "purple",
    NCC: "orange",
    AI: "green",
    HCI: "pink",
    MO: "grey",
    GV: "lightblue",
    PJ: "brown"
  };

  abbrev = function(s) {
    return s.replace(/Bachelor of Science/i, "BSc").replace(/Master (in|of) Science/i, "MSc").replace(/with (Joint )*Honours/i, "(Hons)");
  };

  tabbed = function() {
    var content, panes, tabs;
    content = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    tabs = $.map(content, function(_arg) {
      var content, label, title;
      title = _arg[0], label = _arg[1], content = _arg[2];
      if (content != null) {
        return li({}, tab("" + title, "#" + label));
      }
    }).join("\n");
    panes = $.map(content, function(_arg) {
      var content, label, title;
      title = _arg[0], label = _arg[1], content = _arg[2];
      if (content != null) {
        return div({
          cl: "tab-pane fade",
          id: label
        }, content);
      }
    }).join("\n");
    return div({
      cl: "tabbable tabs"
    }, (ul({
      cl: "nav nav-tabs"
    }, tabs)) + (div({
      cl: "tab-content"
    }, panes)));
  };

  module = function(m) {
    var badge, code, colour;
    code = (m.url != null) && m.url.length > 0 ? link(m.code, m.url) : m.code;
    colour = themes[m.theme] ? themes[m.theme] : "";
    badge = m.theme != null ? small({}, span({
      cl: "badge " + colour,
      literal: 'style="letter-spacing:1px"'
    }, "" + m.theme)) : "";
    return tr({}, (td({}, "" + code + "<br />" + badge)) + (td({
      colspan: 2
    }, ("" + m.title + "<br />") + (small({
      cl: "muted pull-right"
    }, em({}, "" + m.taught + ", " + m.credits + "&nbsp;credits"))))));
  };

  part = function(pt) {
    var cmp, os;
    cmp = function(x, y) {
      switch (false) {
        case x.taught !== y.taught:
          if (x.theme != null) {
            if (y.theme != null) {
              return x.theme.localeCompare(y.theme);
            } else {
              return -1;
            }
          } else {
            if (y.theme != null) {
              return 1;
            } else {
              return 0;
            }
          }
          break;
        case x.taught !== "Full Year":
          return -1;
        case y.taught !== "Full Year":
          return 1;
        case x.taught !== "Autumn":
          return -1;
        case y.taught !== "Autumn":
          return 1;
        case x.taught !== "Spring":
          return -1;
        case y.taught !== "Spring":
          return 1;
        case x.taught !== "Summer":
          return -1;
        case y.taught !== "Summer":
          return 1;
        default:
          return x.theme.localeCompare(y.attr);
      }
    };
    if (pt.c.length === 0 && pt.o.length === 0 && pt.a.length === 0) {
      return "";
    } else {
      os = pt.o.concat(pt.a);
      return div({
        cl: "row-fluid span12"
      }, (pt.c.length === 0 ? "" : table({
        cl: "table table-striped table-condensed span6"
      }, (thead({}, tr({}, th({
        colspan: 3
      }, p({
        cl: "text-center"
      }, "compulsory"))))) + (tbody({}, "" + ($.map(pt.c.sort(cmp), (function(m) {
        return module(m);
      })).join("")))))) + (pt.o.length === 0 ? "" : table({
        cl: "table table-striped table-condensed span6"
      }, (thead({}, tr({}, th({
        colspan: 3
      }, p({
        cl: "text-center"
      }, "optional"))))) + (tbody({}, "" + ($.map(os.sort(cmp), (function(m) {
        return module(m);
      })).join("")))))));
    }
  };

  is_4yearug = function(c) {
    return (c != null ? c.modules.part_iii.o.length : void 0) !== 0 || (c != null ? c.modules.part_iii.c.length : void 0) !== 0;
  };

  theme_summary = function(ms) {
    var format, k, m, summary, t, _i, _j, _k, _l, _len, _len1, _len10, _len11, _len12, _len13, _len14, _len2, _len3, _len4, _len5, _len6, _len7, _len8, _len9, _m, _n, _o, _p, _q, _r, _ref, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _s, _t, _u, _v, _w;
    summary = {
      C0: {
        t: 0
      },
      O0: {
        t: 0
      },
      C1: {
        t: 0
      },
      O1: {
        t: 0
      },
      C2: {
        t: 0
      },
      O2: {
        t: 0
      },
      C3: {
        t: 0
      },
      O3: {
        t: 0
      },
      C4: {
        t: 0
      },
      O4: {
        t: 0
      }
    };
    for (t in themes) {
      for (k in summary) {
        summary[k][t] = 0;
      }
    }
    _ref = ms.part_q.c;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      m = _ref[_i];
      summary.C0[m.theme] += parseInt(m.credits, 10);
      summary.C0.t += parseInt(m.credits, 10);
    }
    _ref1 = ms.part_q.o;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      m = _ref1[_j];
      summary.O0[m.theme] += parseInt(m.credits, 10);
      summary.O0.t += parseInt(m.credits, 10);
    }
    _ref2 = ms.part_q.a;
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      m = _ref2[_k];
      summary.O0[m.theme] += parseInt(m.credits, 10);
      summary.O0.t += parseInt(m.credits, 10);
    }
    _ref3 = ms.part_i.c;
    for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
      m = _ref3[_l];
      summary.C1[m.theme] += parseInt(m.credits, 10);
      summary.C1.t += parseInt(m.credits, 10);
    }
    _ref4 = ms.part_i.o;
    for (_m = 0, _len4 = _ref4.length; _m < _len4; _m++) {
      m = _ref4[_m];
      summary.O1[m.theme] += parseInt(m.credits, 10);
      summary.O1.t += parseInt(m.credits, 10);
    }
    _ref5 = ms.part_i.a;
    for (_n = 0, _len5 = _ref5.length; _n < _len5; _n++) {
      m = _ref5[_n];
      summary.O1[m.theme] += parseInt(m.credits, 10);
      summary.O1.t += parseInt(m.credits, 10);
    }
    _ref6 = ms.part_ii.c;
    for (_o = 0, _len6 = _ref6.length; _o < _len6; _o++) {
      m = _ref6[_o];
      summary.C2[m.theme] += parseInt(m.credits, 10);
      summary.C2.t += parseInt(m.credits, 10);
    }
    _ref7 = ms.part_ii.o;
    for (_p = 0, _len7 = _ref7.length; _p < _len7; _p++) {
      m = _ref7[_p];
      summary.O2[m.theme] += parseInt(m.credits, 10);
      summary.O2.t += parseInt(m.credits, 10);
    }
    _ref8 = ms.part_ii.a;
    for (_q = 0, _len8 = _ref8.length; _q < _len8; _q++) {
      m = _ref8[_q];
      summary.O2[m.theme] += parseInt(m.credits, 10);
      summary.O2.t += parseInt(m.credits, 10);
    }
    _ref9 = ms.part_iii.c;
    for (_r = 0, _len9 = _ref9.length; _r < _len9; _r++) {
      m = _ref9[_r];
      summary.C3[m.theme] += parseInt(m.credits, 10);
      summary.C3.t += parseInt(m.credits, 10);
    }
    _ref10 = ms.part_iii.o;
    for (_s = 0, _len10 = _ref10.length; _s < _len10; _s++) {
      m = _ref10[_s];
      summary.O3[m.theme] += parseInt(m.credits, 10);
      summary.O3.t += parseInt(m.credits, 10);
    }
    _ref11 = ms.part_iii.a;
    for (_t = 0, _len11 = _ref11.length; _t < _len11; _t++) {
      m = _ref11[_t];
      summary.O3[m.theme] += parseInt(m.credits, 10);
      summary.O3.t += parseInt(m.credits, 10);
    }
    _ref12 = ms.part_pg.c;
    for (_u = 0, _len12 = _ref12.length; _u < _len12; _u++) {
      m = _ref12[_u];
      summary.C4[m.theme] += parseInt(m.credits, 10);
      summary.C4.t += parseInt(m.credits, 10);
    }
    _ref13 = ms.part_pg.o;
    for (_v = 0, _len13 = _ref13.length; _v < _len13; _v++) {
      m = _ref13[_v];
      summary.O4[m.theme] += parseInt(m.credits, 10);
      summary.O4.t += parseInt(m.credits, 10);
    }
    _ref14 = ms.part_pg.a;
    for (_w = 0, _len14 = _ref14.length; _w < _len14; _w++) {
      m = _ref14[_w];
      summary.O4[m.theme] += parseInt(m.credits, 10);
      summary.O4.t += parseInt(m.credits, 10);
    }
    format = function(k, v) {
      return span({
        cl: "badge " + themes[k],
        literal: 'style="letter-spacing:1px"'
      }, "" + k + ": " + v);
    };
    return small({
      cl: "muted"
    }, table({
      cl: "table table-condensed table-striped"
    }, (thead({}, "")) + (tbody({}, (tr({}, (summary.C0.t === 0 ? "" : (td({}, "Year 1")) + (td({}, "compulsory")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.C0[k] > 0) {
          _results.push(format(k, summary.C0[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.O0.t === 0 ? "" : (td({}, "")) + (td({}, "optional")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.O0[k] > 0) {
          _results.push(format(k, summary.O0[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.C1.t === 0 ? "" : (td({}, "Year 2")) + (td({}, "compulsory")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.C1[k] > 0) {
          _results.push(format(k, summary.C1[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.O1.t === 0 ? "" : (td({}, "")) + (td({}, "optional")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.O1[k] > 0) {
          _results.push(format(k, summary.O1[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.C2.t === 0 ? "" : (td({}, "Year 3")) + (td({}, "compulsory")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.C2[k] > 0) {
          _results.push(format(k, summary.C2[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.O2.t === 0 ? "" : (td({}, "")) + (td({}, "optional")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.O2[k] > 0) {
          _results.push(format(k, summary.O2[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.C3.t === 0 ? "" : (td({}, "Year 4")) + (td({}, "compulsory")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.C3[k] > 0) {
          _results.push(format(k, summary.C3[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.O3.t === 0 ? "" : (td({}, "Year 4")) + (td({}, "optional")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.O3[k] > 0) {
          _results.push(format(k, summary.O3[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.C4.t === 0 ? "" : (td({}, "compulsory")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.C4[k] > 0) {
          _results.push(format(k, summary.C4[k]));
        }
      }
      return _results;
    })()).join(" ")))))) + (tr({}, (summary.O4.t === 0 ? "" : (td({}, "optional")) + (td({}, ((function() {
      var _results;
      _results = [];
      for (k in themes) {
        if (summary.O4[k] > 0) {
          _results.push(format(k, summary.O4[k]));
        }
      }
      return _results;
    })()).join(" "))))))))));
  };

  courses = {
    fetch: function(url) {
      _promises.push($.Deferred(function(promise) {
        return $.getJSON(url, function(data) {
          _data = data;
          return promise.resolve();
        });
      }));
      return this;
    },
    render: function(tgt) {
      var _this = this;
      $.when.apply(null, _promises).then(function() {
        var aims, code, course, is_pg, kis_text, kis_widget, modules, title, _i, _len, _ref;
        $(tgt).html('');
        _ref = _data.courses;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          course = _ref[_i];
          code = course.code.upcase();
          title = hd(4, {}, (button({
            "class": "btn btn-small badge-info",
            literal: "style=\"margin-right:1.5em;\" type=\"button\",\ndata-toggle=\"collapse\", data-target=\"#" + code + "\" "
          }, "+")) + ("" + code + ", " + (link(abbrev(course.title), course.url)) + " ") + small({
            cl: "muted"
          }, "" + course.type + ", " + course.mode));
          if (is_4yearug(course)) {
            title = title.replace(/MSc/, "MSci");
          }
          aims = div("aims", course.aims.replace(/|/g, "") + (theme_summary(course.modules)));
          modules = function(ms) {
            if (ms.o.length > 0 || ms.c.length > 0) {
              return div({
                cl: "row-fluid"
              }, "" + (part(ms)));
            }
          };
          is_pg = course.modules.part_pg.c.length + course.modules.part_pg.o.length + course.modules.part_pg.a.length > 0;
          if (!is_pg) {
            kis_widget = "<iframe id=\"unistats-widget-frame\"\n  title=\"Unistats KIS Widget\"\n  src=\"http://widget.unistats.ac.uk/Widget/10007154/" + code + "/vertical/Small/en-GB\"\n  scrolling=\"no\"\n  style=\"overflow: hidden; border: 0px none transparent; width: 190px; height: 500px;\">\n</iframe>";
            kis_text = (hd(5, {}, "Key Information Sets (KIS)")) + (p({}, "KIS is an initiative that the government has introduced to allow\nyou to compare different courses and universities.")) + (hd(5, {}, "How to use KIS data")) + (p({}, "We advise you consider KIS data alongside other factors,\nsuch as detailed course content, school or department reputation,\nstudy abroad opportunities, time spent in industry, available\nfacilities to help you plan your career and the research interests\nof staff. Open days are an excellent opportunity to find out this\ninformation so come armed with questions when you visit.")) + (p({}, "Graduate destinations and average starting salaries are collected\nsix months after graduation. These don't take into account that\nsome students travel after university, carry out voluntary work or\nstudy for a postgraduate degree. They also don't account for\nearning potential over the life-span of a career or show how\nquickly a graduate may have accelerated their salary from the\ninitial starting point."));
          }
          $(tgt).append(div({
            cl: "row-fluid"
          }, div({
            cl: "span10 offset1"
          }, title + (div({
            cl: "collapse",
            id: "" + code
          }, tabbed(["aims", "" + code + "-aims", aims], ["year 1", "" + code + "-1-modules", modules(course.modules.part_q)], ["year 2", "" + code + "-2-modules", modules(course.modules.part_i)], ["year 3", "" + code + "-3-modules", modules(course.modules.part_ii)], ["year 4", "" + code + "-4-modules", modules(course.modules.part_iii)], ["modules", "" + code + "-pg-modules", modules(course.modules.part_pg)], !is_pg ? [
            "kis", "" + code + "-kis", div({
              cl: "kis row-fluid span12"
            }, (div({
              cl: "kis-widget span5"
            }, kis_widget)) + (div({
              cl: "kis-text span7"
            }, kis_text)))
          ] : ["", "", ""]))))));
        }
        return $(tgt).append(div({
          cl: "well well-small text-right"
        }, footer({}, small({
          cl: "muted"
        }, em({}, "Generated by " + _data.tool + " on " + _data.date + ".")))));
      });
      return this;
    }
  };

  self.courses = courses;

}).call(this);
